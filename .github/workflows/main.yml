name: CI

on: [push, pull_request]

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        #php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4']
        php-versions: ['7.4']
        #db-versions: ['5.5', '5.7']
        db-versions: ['5.5']
        #oxid-versions: ['6.0', '6.1', '6.2']
        oxid-versions: ['6.2']
        exclude:
          - php-versions: '5.6'
            oxid-versions: '6.1'
          - php-versions: '5.6'
            oxid-versions: '6.2'
          - php-versions: '7.0'
            oxid-versions: '6.2'
          - php-versions: '7.1'
            oxid-versions: '6.0'
          - php-versions: '7.2'
            oxid-versions: '6.0'
          - php-versions: '7.2'
            oxid-versions: '6.1'
          - php-versions: '7.3'
            oxid-versions: '6.0'
          - php-versions: '7.3'
            oxid-versions: '6.1'
          - php-versions: '7.4'
            oxid-versions: '6.0'
          - php-versions: '7.4'
            oxid-versions: '6.1'
    name: Oxid ${{ matrix.oxid-versions }}/PHP ${{ matrix.php-versions }}/MySQL ${{ matrix.db-versions }}
    services:
      mysql:
        image: mysql:${{ matrix.db-versions }}
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
        - 3306
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Install PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, xdebug, pdo_mysql
    - name: Check PHP Version
      run: php -v
    - name: Check Composer Version
      run: composer -V
    - name: Check PHP Extensions
      run: php -m
    - name: Start MySQL
      run: sudo /etc/init.d/mysql start
    - name: PHP Syntax Checker
      run: find . -type f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors detected" )
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Setup Oxid 6
      run: |
        mkdir /tmp/oxid6
        cd /tmp/oxid6
        composer create-project -n --no-install --no-progress oxid-esales/oxideshop-project . dev-b-${{ matrix.oxid-versions }}-ce
        composer config repositories.payone-gmbh/oxid-6 path $GITHUB_WORKSPACE
        composer config minimum-stability dev
        composer install --dry-run --no-ansi &> packagelist
        export PAYONE_PREVIOUS=$(grep payone packagelist | sed 's/.*(\(.*\))/\1/')
        composer require payone-gmbh/oxid-6:"dev-${{ steps.extract_branch.outputs.branch }} as $PAYONE_PREVIOUS"
        cp /tmp/oxid6/source/config.inc.php.dist /tmp/oxid6/source/config.inc.php
        sed -i 's|<dbHost>|localhost|; s|<dbName>|oxideshop|; s|<dbUser>|root|; s|<dbPwd>|root|; s|<sShopURL>|http://localhost|; s|<sShopDir>|/tmp/oxid6/source|; s|<sCompileDir>|/tmp/oxid6/source/tmp|; s|\$this->iDebug = 0|\$this->iDebug = 1|' /tmp/oxid6/source/config.inc.php
        sed -i "s|\$this->edition = ''|\$this->edition = 'CE'|" /tmp/oxid6/source/config.inc.php
        chmod -R 777 /tmp/oxid6/source/log
    - name: Run tests
      # Run composer update to make services available, see #128
      run: |
        export PARTIAL_MODULE_PATHS='fc/fcpayone'
        export SHOP_PATH='/tmp/oxid6/source'
        export SHOP_TESTS_PATH='/tmp/oxid6/vendor/oxid-esales/oxideshop-ce/tests'
        export ACTIVATE_ALL_MODULES=1
        export RUN_TESTS_FOR_SHOP=1
        export SHOP_SETUP_PATH='/tmp/oxid6/source/Setup'
        export TEST_DIRS='unit,Unit'
        php /tmp/oxid6/vendor/bin/runtests AllTestsUnit
